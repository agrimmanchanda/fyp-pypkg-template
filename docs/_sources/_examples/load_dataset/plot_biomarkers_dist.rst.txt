
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples\load_dataset\plot_biomarkers_dist.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__examples_load_dataset_plot_biomarkers_dist.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_load_dataset_plot_biomarkers_dist.py:


Biomarker distributions in dataset
===========================================

Using ``seaborn`` library to visualise biomarker distributions

.. GENERATED FROM PYTHON SOURCE LINES 9-10

Import the relevant libraries first

.. GENERATED FROM PYTHON SOURCE LINES 10-19

.. code-block:: default
   :lineno-start: 10

    import numpy as np 
    import pandas as pd
    import matplotlib.pyplot as plt
    import seaborn as sns
    from sklearn import preprocessing
    import warnings
    warnings.filterwarnings("ignore")
    from pkgname.utils.widgets import TidyWidget








.. GENERATED FROM PYTHON SOURCE LINES 20-24

-------------------------------------
Data handling
-------------------------------------
First, let's define the data set path and relevant variables of interest

.. GENERATED FROM PYTHON SOURCE LINES 24-33

.. code-block:: default
   :lineno-start: 25


    path_data = 'datasets/pathology-sample-march-may.csv'

    FBC_codes = ["EOS", "MONO", "BASO", "NEUT", "RBC", "WBC", 
                    "MCHC", "MCV", "LY", "HCT", "RDW", "HGB", 
                    "MCH", "PLT", "MPV", "NRBCA"]

    INTEREST_cols = ["_uid", "orderCode", "result", "dateResult"]








.. GENERATED FROM PYTHON SOURCE LINES 36-37

Next, import only variables of interest and FBC panel results

.. GENERATED FROM PYTHON SOURCE LINES 37-60

.. code-block:: default
   :lineno-start: 37

    df = pd.read_csv(path_data, usecols=INTEREST_cols)

    df = df.loc[df['orderCode'].isin(FBC_codes)]

    df = df.dropna() # drop records of patients with NaN _uid

    df.reset_index(drop=True, inplace=True)

    # Define function to set pid (patient ID) sorted by datetime

    def change_pid_datetime_format(df):
        df['pid'] = df['_uid'].str.extract('(\d+)').astype(int)

        pid_col = df.pop('pid')

        df.insert(0, 'pid', pid_col)

        df.drop('_uid', inplace=True, axis=1)

        df.sort_values(by=['pid', 'dateResult'], inplace=True)

        return df








.. GENERATED FROM PYTHON SOURCE LINES 61-64

-------------------------------------
Transform data using TidyWidget
-------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 64-86

.. code-block:: default
   :lineno-start: 65


    # Parameters
    index = ['_uid', 'dateResult', 'orderCode']
    value = 'result'

    # Create widget
    widget = TidyWidget(index=index, value=value)

    # Transform (keep all)
    transform, duplicated = \
        widget.transform(df, report_duplicated=True)

    # Set pid for each patient and sort accordingly
    transform_fmt = change_pid_datetime_format(transform)

    # Transform (keep first)
    transform_first = \
        widget.transform(df, keep='first')

    # Set pid for each patient and sort accordingly
    transform_first_fmt = change_pid_datetime_format(transform_first)








.. GENERATED FROM PYTHON SOURCE LINES 87-90

-------------------------------------
Preprocessing step: normalise
-------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 90-104

.. code-block:: default
   :lineno-start: 91


    # Obtain the biomarkers DataFrame only
    biomarkers_df = transform_fmt.iloc[:,2:].dropna()
    biomarkers_df_copy = biomarkers_df.copy(deep=True)
    biomarkers_data = biomarkers_df.values

    # Normalise using minmax scaler
    min_max_scaler = preprocessing.MinMaxScaler()
    val_scaled = min_max_scaler.fit_transform(biomarkers_data)
    biomarkers_df = pd.DataFrame(val_scaled, columns=[col for col in biomarkers_df_copy.columns])

    # Can use df.melt() method
    # biomarkers_dfm = biomarkers_df.melt(var_name='biomarkers')








.. GENERATED FROM PYTHON SOURCE LINES 105-108

-------------------------------------
Plot histograms for each biomarker
-------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 108-118

.. code-block:: default
   :lineno-start: 109


    for col in biomarkers_df_copy.columns:
        plt.figure(figsize=(15,10))
        plt.title(f'Histogram for biomarker: {col}', fontweight='bold', fontsize=20)
        plt.xlabel('Normalised value', fontsize=16)
        plt.ylabel('Density', fontsize=16)
        plt.xticks(fontsize=16)
        plt.yticks(fontsize=16)
        hist = biomarkers_df_copy[col].hist(bins=50)
        hist.plot(grid=True, figsize=(15,10))



.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /_examples/load_dataset/images/sphx_glr_plot_biomarkers_dist_001.png
          :alt: Histogram for biomarker: BASO
          :class: sphx-glr-multi-img

    *

      .. image:: /_examples/load_dataset/images/sphx_glr_plot_biomarkers_dist_002.png
          :alt: Histogram for biomarker: EOS
          :class: sphx-glr-multi-img

    *

      .. image:: /_examples/load_dataset/images/sphx_glr_plot_biomarkers_dist_003.png
          :alt: Histogram for biomarker: HCT
          :class: sphx-glr-multi-img

    *

      .. image:: /_examples/load_dataset/images/sphx_glr_plot_biomarkers_dist_004.png
          :alt: Histogram for biomarker: HGB
          :class: sphx-glr-multi-img

    *

      .. image:: /_examples/load_dataset/images/sphx_glr_plot_biomarkers_dist_005.png
          :alt: Histogram for biomarker: LY
          :class: sphx-glr-multi-img

    *

      .. image:: /_examples/load_dataset/images/sphx_glr_plot_biomarkers_dist_006.png
          :alt: Histogram for biomarker: MCH
          :class: sphx-glr-multi-img

    *

      .. image:: /_examples/load_dataset/images/sphx_glr_plot_biomarkers_dist_007.png
          :alt: Histogram for biomarker: MCHC
          :class: sphx-glr-multi-img

    *

      .. image:: /_examples/load_dataset/images/sphx_glr_plot_biomarkers_dist_008.png
          :alt: Histogram for biomarker: MCV
          :class: sphx-glr-multi-img

    *

      .. image:: /_examples/load_dataset/images/sphx_glr_plot_biomarkers_dist_009.png
          :alt: Histogram for biomarker: MONO
          :class: sphx-glr-multi-img

    *

      .. image:: /_examples/load_dataset/images/sphx_glr_plot_biomarkers_dist_010.png
          :alt: Histogram for biomarker: MPV
          :class: sphx-glr-multi-img

    *

      .. image:: /_examples/load_dataset/images/sphx_glr_plot_biomarkers_dist_011.png
          :alt: Histogram for biomarker: NEUT
          :class: sphx-glr-multi-img

    *

      .. image:: /_examples/load_dataset/images/sphx_glr_plot_biomarkers_dist_012.png
          :alt: Histogram for biomarker: NRBCA
          :class: sphx-glr-multi-img

    *

      .. image:: /_examples/load_dataset/images/sphx_glr_plot_biomarkers_dist_013.png
          :alt: Histogram for biomarker: PLT
          :class: sphx-glr-multi-img

    *

      .. image:: /_examples/load_dataset/images/sphx_glr_plot_biomarkers_dist_014.png
          :alt: Histogram for biomarker: RBC
          :class: sphx-glr-multi-img

    *

      .. image:: /_examples/load_dataset/images/sphx_glr_plot_biomarkers_dist_015.png
          :alt: Histogram for biomarker: RDW
          :class: sphx-glr-multi-img

    *

      .. image:: /_examples/load_dataset/images/sphx_glr_plot_biomarkers_dist_016.png
          :alt: Histogram for biomarker: WBC
          :class: sphx-glr-multi-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  27.416 seconds)


.. _sphx_glr_download__examples_load_dataset_plot_biomarkers_dist.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_biomarkers_dist.py <plot_biomarkers_dist.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_biomarkers_dist.ipynb <plot_biomarkers_dist.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_


.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples\load_dataset\plot_biomarkers_dist.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__examples_load_dataset_plot_biomarkers_dist.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_load_dataset_plot_biomarkers_dist.py:


Biomarker distributions in dataset
===========================================

Using ``seaborn`` library to visualise biomarker distributions

.. GENERATED FROM PYTHON SOURCE LINES 9-10

Import the relevant libraries first

.. GENERATED FROM PYTHON SOURCE LINES 10-21

.. code-block:: default
   :lineno-start: 10

    import numpy as np 
    import pandas as pd
    import matplotlib.pyplot as plt
    import seaborn as sns
    from scipy import stats
    import warnings
    warnings.filterwarnings("ignore")
    from sklearn import preprocessing
    from pkgname.utils.load_dataset import *









.. GENERATED FROM PYTHON SOURCE LINES 22-25

-------------------------------------
Data import 
-------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 25-38

.. code-block:: default
   :lineno-start: 26


    # Set relative data path and set FBC panel list
    path_data = '../resources/datasets/nhs/Transformed_First_FBC_dataset.csv'

    FBC_CODES = ["EOS", "MONO", "BASO", "NEUT", "RBC", "WBC", 
                    "MCHC", "MCV", "LY", "HCT", "RDW", "HGB", 
                    "MCH", "PLT", "MPV", "NRBCA"]

    # Read data and drop Nan _uid records
    df = pd.read_csv(path_data).dropna(subset=['pid'])

    df.reset_index(drop=True, inplace=True)








.. GENERATED FROM PYTHON SOURCE LINES 39-42

-------------------------------------
Violin plots for raw data
-------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 42-73

.. code-block:: default
   :lineno-start: 43


    # Obtain the biomarkers DataFrame only
    biomarkers_df = df[FBC_CODES].dropna(subset=FBC_CODES)

    # Set figure size
    plt.figure(figsize=(15,15))

    # Set single title for all figures
    plt.suptitle('Violin plot for raw data', 
                fontweight='bold', 
                fontsize=20)

    for plot_idx, biomarker in enumerate(biomarkers_df, start=1):
    
        plt.subplot(4,4,plot_idx)
    
        sns.violinplot(data=biomarkers_df[biomarker], 
                    color='skyblue',
                    orient='h')
    
        plt.xticks(fontsize=12)
        plt.xlabel(f'{biomarker}', 
                fontweight='bold', 
                fontsize=12)

    # Space out plots 
    plt.tight_layout()
    
    # Show
    plt.show()




.. image:: /_examples/load_dataset/images/sphx_glr_plot_biomarkers_dist_001.png
    :alt: Violin plot for raw data
    :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 74-77

-------------------------------------
Violin plots without outliers
-------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 77-108

.. code-block:: default
   :lineno-start: 78


    # Remove outliers from dataset
    complete_profiles, outlier_count = remove_data_outliers(biomarkers_df)

    # Set figure size
    plt.figure(figsize=(15,15))

    # Set single title for all figures
    plt.suptitle('Violin plot for complete profiles', 
                fontweight='bold', 
                fontsize=20)

    for plot_idx, biomarker in enumerate(complete_profiles, start=1):
    
        plt.subplot(4,4,plot_idx)
    
        sns.violinplot(data=complete_profiles[biomarker], 
                    color='skyblue',
                    orient='h')
    
        plt.xticks(fontsize=12)
        plt.xlabel(f'{biomarker}', 
                fontweight='bold', 
                fontsize=12)

    # Space out plots 
    plt.tight_layout()
    
    # Show
    plt.show()




.. image:: /_examples/load_dataset/images/sphx_glr_plot_biomarkers_dist_002.png
    :alt: Violin plot for complete profiles
    :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 109-112

-------------------------------------
Jarque-Bera (JB) test for normality
-------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 112-134

.. code-block:: default
   :lineno-start: 113


    # Standardise data 
    std_complete_profiles = preprocessing.StandardScaler().fit_transform(complete_profiles)

    # Create DataFrame of standardised data
    norm_profiles = pd.DataFrame(data=std_complete_profiles, columns=complete_profiles.columns)

    # Dataframe to store JB Test 
    norm_scores = pd.DataFrame(columns=complete_profiles.columns)

    # Note: JB test is only valid on datasets with n > 2000 where n are samples
    # in the dataset. The complete profile data set contains 56271 records. 

    # Loop
    for biomarker in complete_profiles.columns:

        # Calculate and store JB test statistic and p-value for each biomarker
        jb_test = stats.jarque_bera(complete_profiles[biomarker])
        norm_scores[biomarker] = jb_test

    norm_scores.index = ['Test Statistic', 'P-Value']

    norm_scores.T




.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>Test Statistic</th>
          <th>P-Value</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>EOS</th>
          <td>13429.167720</td>
          <td>0.0</td>
        </tr>
        <tr>
          <th>MONO</th>
          <td>4508.001342</td>
          <td>0.0</td>
        </tr>
        <tr>
          <th>BASO</th>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>NEUT</th>
          <td>6413.170125</td>
          <td>0.0</td>
        </tr>
        <tr>
          <th>RBC</th>
          <td>611.121763</td>
          <td>0.0</td>
        </tr>
        <tr>
          <th>WBC</th>
          <td>2824.097411</td>
          <td>0.0</td>
        </tr>
        <tr>
          <th>MCHC</th>
          <td>140.936892</td>
          <td>0.0</td>
        </tr>
        <tr>
          <th>MCV</th>
          <td>206.280739</td>
          <td>0.0</td>
        </tr>
        <tr>
          <th>LY</th>
          <td>1201.464250</td>
          <td>0.0</td>
        </tr>
        <tr>
          <th>HCT</th>
          <td>1014.117837</td>
          <td>0.0</td>
        </tr>
        <tr>
          <th>RDW</th>
          <td>7896.951619</td>
          <td>0.0</td>
        </tr>
        <tr>
          <th>HGB</th>
          <td>848.836491</td>
          <td>0.0</td>
        </tr>
        <tr>
          <th>MCH</th>
          <td>310.994030</td>
          <td>0.0</td>
        </tr>
        <tr>
          <th>PLT</th>
          <td>909.825877</td>
          <td>0.0</td>
        </tr>
        <tr>
          <th>MPV</th>
          <td>880.109647</td>
          <td>0.0</td>
        </tr>
        <tr>
          <th>NRBCA</th>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  13.284 seconds)


.. _sphx_glr_download__examples_load_dataset_plot_biomarkers_dist.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_biomarkers_dist.py <plot_biomarkers_dist.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_biomarkers_dist.ipynb <plot_biomarkers_dist.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
